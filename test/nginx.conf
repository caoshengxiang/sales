# 记事本编辑，不能能运行问题 https://blog.csdn.net/qq_34691713/article/details/84635351
# nginx安装目录不能有中文，会报错
# gizp gzip_types 要配置了类型才会压缩，（没有压缩，可以到控制台看看Content-Type）
# 注意缓存问题，



#运行用户
#user  nobody;
#启动进程,通常设置成和cpu的数量相等
worker_processes  1;

#全局错误日志及PID文件
error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;

pid        logs/nginx.pid;

#工作模式及连接数上限
events {
    #use epoll;  #epoll是多路复用IO(I/O Multiplexing)中的一种方式,但是仅用于linux2.6以上内核,可以大大提高nginx的性能
    worker_connections  1024; #单个后台worker process进程的最大并发链接数
    # multi_accept on;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip  on; #开启Gzip
    gzip_min_length 1k;    #压缩临界值，大于多少K的才压缩，一般不用改
    #gzip_buffers 4 16k;
    #gzip_static on|off
    #gzip_http_version 1.1;
    gzip_comp_level 2;      #压缩级别【1-9】，越大压缩率越高，同时消耗cpu资源也越多。gzip_comp_level 大于2时效果并不是很明显。所以可以将值设置为1或者2。
    #gzip_types text/plain application/x-javascript text/css application/xml text/javascript application/x-httpd-php image/jpeg image/gif image/png;
    gzip_types text/plain application/javascript text/css font/ttf font/otf image/svg+xml;
    gzip_vary on;
    #gzip_disable "MSIE [1-6]\.";

    server {
        listen       8800;
        server_name  localhost;

        #charset koi8-r;

        access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}

#开启缓存
        location ~* ^.+\.(ico|gif|jpg|jpeg|png)$ {
                access_log   off;
                expires      30d;
        }

        location ~* ^.+\.(css|js|txt|xml|swf|wav)$ {
            access_log   off;
            expires      24h;
        }

        location ~* ^.+\.(html|htm)$ {
                expires      1h;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
